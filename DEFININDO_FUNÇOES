{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": [],
      "authorship_tag": "ABX9TyOL0+2t41eJldVSAXaIpJq1",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/DevValen/LINGUAGEM-DE-PROGRA-AM-O/blob/main/UNIDADE_1_AULA_4(LP).ipynb\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "zqJS97cWndII",
        "outputId": "d88df4ba-49cd-4a9d-9d55-937e9a50fb4d"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "O comprimento da lista é: 14\n"
          ]
        }
      ],
      "source": [
        "#CRIE UMA LISTA DE NÚMEROS\n",
        "números = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 11, 'a' , True]\n",
        "\n",
        "#Use a função len() para calcular o comprimento da lista:\n",
        "comprimento = len(números)\n",
        "print(\"O comprimento da lista é:\", comprimento)"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#Definindo uma função chamada soma!\n",
        "def soma(a, b):\n",
        "  resultado = a + b\n",
        "  return resultado"
      ],
      "metadata": {
        "id": "b5BjX_b3vq2b"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "resultado_soma = soma(300, 3)\n",
        "print(\"A soma de 300 + 3 é:\", resultado_soma)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "MB2eGS2owLNb",
        "outputId": "3be5ef22-8a39-4c8b-dd43-9c6a83f9b1fd"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "A soma de 300 + 3 é: 303\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#Definindo uma função chamada \"e_par\"\n",
        "def e_par(numero):\n",
        "  #operador módulo porcentagem\n",
        "  if numero % 2 == 0:\n",
        "    return True\n",
        "  else:\n",
        "    return False"
      ],
      "metadata": {
        "id": "jL8cOdKxyJIo"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "número = 5289\n",
        "if e_par(número):\n",
        "  print(f'{número}, é um número par.')\n",
        "else:\n",
        "    print(f'{número}, é um número ímpar.')"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "nsAgfuQNymDh",
        "outputId": "d09910d4-0d1b-44e1-8e3a-51df7af06ac4"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "5289, é um número ímpar.\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#Lista das notas dos estudantes:\n",
        "notas = [7.5, 8.0, 6.5, 9.0, 7.0]\n",
        "\n",
        "#Função regular para calcular a média:\n",
        "def calcular_media(notas):\n",
        "    total = sum(notas)\n",
        "    media = total / len(notas)\n",
        "    return media\n",
        "\n",
        "#Função lambda para arrendodar médias para apenas duas casas decimais\n",
        "arredondar_media = lambda media: round(media, 2)\n",
        "\n",
        "#Calcular a média:\n",
        "media = calcular_media(notas)\n",
        "media_arredondada = arredondar_media(media)\n",
        "\n",
        "#Verificar se os estudantes foram aprovados:\n",
        "situacao = \"aprovado\" if media_arredondada >= 6 else \"reprovado\"\n",
        "\n",
        "#Situação\n",
        "print(\"Notas dos estudantes\", notas)\n",
        "print(\"Média das notas\", media_arredondada)\n",
        "print(\"Situação dos estudantes\", situacao)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "7zYhe6ObCx1r",
        "outputId": "0ac33f93-0757-4de2-f01b-f76f1dae6896"
      },
      "execution_count": 23,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Notas dos estudantes [7.5, 8.0, 6.5, 9.0, 7.0]\n",
            "Média das notas 7.6\n",
            "Situação dos estudantes aprovado\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [],
      "metadata": {
        "id": "_o3AdvQuLonJ"
      },
      "execution_count": null,
      "outputs": []
    }
  ]
}
